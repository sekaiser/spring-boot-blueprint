buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
	}
	repositories {
		gradlePluginPortal()
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("io.franzbecker:gradle-lombok:1.14")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'io.franzbecker.gradle-lombok'

group = 'de.seka'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

task("addNewMigration") {
	doLast {
		def timestamp = new Date().format("yyyyMMddHHmmssSSS", TimeZone.getTimeZone("GMT"))
		def fileName = "./src/main/resources/db/migration/" + "V" + timestamp + "___" + migrationName + ".sql"
		file(new File(fileName)).createNewFile()
	}
}

task unitTests(type: Test, group: "verification") {
	useJUnit {
		includeCategories "de.seka.news.test.categories.UnitTest"
		excludeCategories "de.seka.news.test.categories.IntegrationTest"
		excludeCategories "de.seka.news.test.categories.DocumentationTest"
	}
	outputs.upToDateWhen {
		return false
	}
}

task integrationTests(type: Test, group: "verification") {
	useJUnit {
		includeCategories "de.seka.news.test.categories.IntegrationTest"
		excludeCategories "de.seka.news.test.categories.UnitTest"
		excludeCategories "de.seka.news.test.categories.DocumentationTest"
	}
	outputs.upToDateWhen {
		return false
	}
}

task documentationTests(type: Test, group: "verification") {
	useJUnit {
		includeCategories "de.seka.news.test.categories.DocumentationTest"
		excludeCategories "de.seka.news.test.categories.UnitTest"
		excludeCategories "de.seka.news.test.categories.IntegrationTest"
	}
	outputs.upToDateWhen {
		return false
	}
}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-actuator')
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation('org.flywaydb:flyway-core')
	implementation('net.sf.supercsv:super-csv:2.4.0')
	implementation("com.google.code.findbugs:annotations:3.0.1")
	implementation('javax.xml.bind:jaxb-api:2.3.0')
	implementation('javax.activation:activation:1.1')
	implementation('org.glassfish.jaxb:jaxb-runtime:2.3.0')
	runtimeOnly('org.springframework.boot:spring-boot-devtools')
	runtimeOnly('com.h2database:h2')
	runtimeOnly('org.postgresql:postgresql')
	compileOnly('org.projectlombok:lombok')
	testImplementation('org.hamcrest:hamcrest-all:1.3')
	testImplementation('org.mockito:mockito-all:1.10.19')
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')
	testImplementation('org.springframework.security:spring-security-test')
}
